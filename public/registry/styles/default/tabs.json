{
  "name": "tabs",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-tabs"
  ],
  "files": [
    {
      "path": "ui/tabs.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as TabsPrimitive from '@radix-ui/react-tabs'\nimport { cva, VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nexport const tabsListVariants = cva('inline-flex items-center justify-center', {\n  variants: {\n    variant: {\n      default: 'h-9 rounded-lg bg-neutral-3 p-1',\n      line: 'gap-1 relative after:z-[-1] after:absolute after:bottom-0 after:inset-x-0 after:border-b after:border-input',\n      button: 'gap-2',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n})\n\nexport const tabsTriggerVariants = cva(\n  'px-3 inline-flex items-center justify-center whitespace-nowrap text-sm transition focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default:\n          'text-neutral-11 py-1 rounded-md font-medium ring-offset-background focus-visible:ring-2 focus-visible:ring-ring-focus focus-visible:ring-offset-2 data-[state=active]:bg-white data-[state=active]:dark:bg-neutral-6 data-[state=active]:text-neutral-12 data-[state=active]:shadow hover:data-[state=inactive]:bg-accent hover:data-[state=inactive]:text-accent-fg',\n        line: 'text-foreground/70 pt-1.5 pb-3 rounded-md relative z-0 data-[state=active]:font-medium hover:text-accent-fg data-[state=active]:text-primary-11 before:z-[-1] before:absolute before:inset-x-0 before:top-0 before:bottom-1.5 before:rounded-md before:transition hover:before:bg-accent-light hover:data-[state=active]:before:bg-primary-3 data-[state=active]:after:absolute data-[state=active]:after:h-[3px] data-[state=active]:after:bg-primary-9 data-[state=active]:after:bottom-0 data-[state=active]:after:inset-x-3 data-[state=active]:after:rounded-full focus-visible:before:ring-2 focus-visible:before:ring-ring',\n        button:\n          'h-9 px-3 rounded-md text-foreground/70 data-[state=active]:font-medium data-[state=active]:text-primary-11 data-[state=active]:bg-primary-3 hover:data-[state=inactive]:bg-accent-light hover:data-[state=inactive]:text-accent-fg',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nconst TabsListVariantContext = React.createContext<Pick<VariantProps<typeof tabsListVariants>, 'variant'>>({\n  variant: 'default',\n})\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List> & VariantProps<typeof tabsListVariants>\n>(({ className, variant, children, ...props }, ref) => (\n  <TabsPrimitive.List ref={ref} className={cn(tabsListVariants({ variant, className }))} {...props}>\n    <TabsListVariantContext.Provider value={{ variant }}>{children}</TabsListVariantContext.Provider>\n  </TabsPrimitive.List>\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> & VariantProps<typeof tabsTriggerVariants>\n>(({ className, variant: customVariant, ...props }, ref) => {\n  const { variant: listVariant } = React.useContext(TabsListVariantContext)\n  const variant = customVariant || listVariant\n  return <TabsPrimitive.Trigger ref={ref} className={cn(tabsTriggerVariants({ variant, className }))} {...props} />\n})\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring-focus focus-visible:ring-offset-0',\n      className,\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}