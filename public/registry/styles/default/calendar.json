{
  "name": "calendar",
  "type": "registry:ui",
  "dependencies": [
    "react-day-picker@8.10.1",
    "date-fns"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/calendar.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport { enUS, zhCN } from 'date-fns/locale'\nimport { ChevronLeft, ChevronRight } from 'lucide-react'\nimport { DayPicker } from 'react-day-picker'\n\nimport { cn } from '@/lib/utils'\nimport { buttonVariants } from '@/registry/default/ui/button'\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n  language?: 'zh' | 'en'\n}\n\nfunction Calendar({ className, classNames, language, showOutsideDays = true, ...props }: CalendarProps) {\n  return (\n    <DayPicker\n      locale={((lng) => {\n        switch (lng) {\n          case 'zh':\n            return zhCN\n          case 'en':\n          default:\n            return enUS\n        }\n      })(language)}\n      showOutsideDays={showOutsideDays}\n      className={cn('p-3', className)}\n      classNames={{\n        months: 'flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0',\n        month: 'space-y-4',\n        caption: 'flex justify-center pt-1 relative items-center',\n        caption_label: 'text-sm font-medium',\n        nav: 'space-x-1 flex items-center',\n        nav_button: cn(\n          buttonVariants({ variant: 'outline', color: 'default' }),\n          'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 focus-visible:opacity-100',\n        ),\n        nav_button_previous: 'absolute left-1',\n        nav_button_next: 'absolute right-1',\n        table: 'w-full border-collapse space-y-1',\n        head_row: 'flex',\n        head_cell: 'text-muted-fg rounded-md w-8 font-normal text-[0.8rem]',\n        row: 'flex w-full mt-2',\n        cell: cn(\n          'relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent-light [&:has([aria-selected].day-outside)]:bg-accent-light/50 [&:has([aria-selected].day-range-end)]:rounded-r-md',\n          props.mode === 'range'\n            ? '[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md'\n            : '[&:has([aria-selected])]:rounded-md',\n        ),\n        day: cn(\n          buttonVariants({ variant: 'ghost', color: 'default' }),\n          'h-8 w-8 p-0 font-normal aria-selected:opacity-100',\n        ),\n        day_range_end: 'day-range-end',\n        day_selected:\n          'bg-primary-9 text-fg-invert hover:bg-primary-9 hover:text-fg-invert focus:bg-primary-9 focus:text-fg-invert',\n        day_today: '[&:not([aria-selected])]:bg-accent [&:not([aria-selected])]:text-accent-fg',\n        day_outside:\n          'day-outside text-muted-fg opacity-50 aria-selected:bg-accent-light/50 aria-selected:text-muted-fg aria-selected:opacity-30',\n        day_disabled: '[&:not([aria-selected])]:text-muted-fg [&:not([aria-selected])]:opacity-50',\n        day_range_middle: 'aria-selected:bg-accent-light aria-selected:text-accent-fg',\n        day_hidden: 'invisible',\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\n\nCalendar.displayName = 'Calendar'\n\nexport { Calendar }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}