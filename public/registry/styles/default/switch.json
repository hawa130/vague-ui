{
  "name": "switch",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-switch"
  ],
  "files": [
    {
      "path": "ui/switch.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as SwitchPrimitives from '@radix-ui/react-switch'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst switchVariants = cva(\n  'peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring-focus focus-visible:ring-offset-0 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary-9 data-[state=unchecked]:bg-input hover:data-[state=unchecked]:bg-input/90 active:data-[state=unchecked]:bg-ring hover:data-[state=checked]:bg-primary-9/90 active:data-[state=checked]:bg-primary-10 group',\n  {\n    variants: {\n      size: {\n        md: 'h-6 w-11',\n        sm: 'h-5 w-9',\n      },\n    },\n    defaultVariants: {\n      size: 'md',\n    },\n  },\n)\n\nconst switchThumbVariants = cva(\n  'pointer-events-none block rounded-full bg-light-1 group-hover:bg-light-1/90 shadow-lg ring-0 transition-[background-color,transform,width] duration-200',\n  {\n    variants: {\n      size: {\n        md: 'h-5 w-5 group-active:w-6 group-active:data-[state=checked]:translate-x-4 data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0',\n        sm: 'h-4 w-4 group-active:w-5 group-active:data-[state=checked]:translate-x-3 data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0',\n      },\n    },\n    defaultVariants: {\n      size: 'md',\n    },\n  },\n)\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root> & VariantProps<typeof switchVariants>\n>(({ className, size, ...props }, ref) => (\n  <SwitchPrimitives.Root className={cn(switchVariants({ size, className }))} {...props} ref={ref}>\n    <SwitchPrimitives.Thumb className={switchThumbVariants({ size })} />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}